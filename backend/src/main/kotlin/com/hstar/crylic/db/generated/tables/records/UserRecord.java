/*
 * This file is generated by jOOQ.
 */
package com.hstar.crylic.db.generated.tables.records;


import com.hstar.crylic.db.generated.tables.User;

import java.time.OffsetDateTime;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserRecord extends UpdatableRecordImpl<UserRecord> implements Record7<UUID, String, String, String, String, OffsetDateTime, OffsetDateTime> {

    private static final long serialVersionUID = 349660130;

    /**
     * Setter for <code>public.User.id</code>.
     */
    public UserRecord setId(UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.User.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.User.email</code>.
     */
    public UserRecord setEmail(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.User.email</code>.
     */
    public String getEmail() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.User.password</code>.
     */
    public UserRecord setPassword(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.User.password</code>.
     */
    public String getPassword() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.User.first_name</code>.
     */
    public UserRecord setFirstName(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.User.first_name</code>.
     */
    public String getFirstName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.User.last_name</code>.
     */
    public UserRecord setLastName(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.User.last_name</code>.
     */
    public String getLastName() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.User.created_at</code>.
     */
    public UserRecord setCreatedAt(OffsetDateTime value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.User.created_at</code>.
     */
    public OffsetDateTime getCreatedAt() {
        return (OffsetDateTime) get(5);
    }

    /**
     * Setter for <code>public.User.updated_at</code>.
     */
    public UserRecord setUpdatedAt(OffsetDateTime value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.User.updated_at</code>.
     */
    public OffsetDateTime getUpdatedAt() {
        return (OffsetDateTime) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<UUID, String, String, String, String, OffsetDateTime, OffsetDateTime> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<UUID, String, String, String, String, OffsetDateTime, OffsetDateTime> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return User.USER.ID;
    }

    @Override
    public Field<String> field2() {
        return User.USER.EMAIL;
    }

    @Override
    public Field<String> field3() {
        return User.USER.PASSWORD;
    }

    @Override
    public Field<String> field4() {
        return User.USER.FIRST_NAME;
    }

    @Override
    public Field<String> field5() {
        return User.USER.LAST_NAME;
    }

    @Override
    public Field<OffsetDateTime> field6() {
        return User.USER.CREATED_AT;
    }

    @Override
    public Field<OffsetDateTime> field7() {
        return User.USER.UPDATED_AT;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getEmail();
    }

    @Override
    public String component3() {
        return getPassword();
    }

    @Override
    public String component4() {
        return getFirstName();
    }

    @Override
    public String component5() {
        return getLastName();
    }

    @Override
    public OffsetDateTime component6() {
        return getCreatedAt();
    }

    @Override
    public OffsetDateTime component7() {
        return getUpdatedAt();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getEmail();
    }

    @Override
    public String value3() {
        return getPassword();
    }

    @Override
    public String value4() {
        return getFirstName();
    }

    @Override
    public String value5() {
        return getLastName();
    }

    @Override
    public OffsetDateTime value6() {
        return getCreatedAt();
    }

    @Override
    public OffsetDateTime value7() {
        return getUpdatedAt();
    }

    @Override
    public UserRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public UserRecord value2(String value) {
        setEmail(value);
        return this;
    }

    @Override
    public UserRecord value3(String value) {
        setPassword(value);
        return this;
    }

    @Override
    public UserRecord value4(String value) {
        setFirstName(value);
        return this;
    }

    @Override
    public UserRecord value5(String value) {
        setLastName(value);
        return this;
    }

    @Override
    public UserRecord value6(OffsetDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public UserRecord value7(OffsetDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public UserRecord values(UUID value1, String value2, String value3, String value4, String value5, OffsetDateTime value6, OffsetDateTime value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserRecord
     */
    public UserRecord() {
        super(User.USER);
    }

    /**
     * Create a detached, initialised UserRecord
     */
    public UserRecord(UUID id, String email, String password, String firstName, String lastName, OffsetDateTime createdAt, OffsetDateTime updatedAt) {
        super(User.USER);

        set(0, id);
        set(1, email);
        set(2, password);
        set(3, firstName);
        set(4, lastName);
        set(5, createdAt);
        set(6, updatedAt);
    }
}
